@page "/"
@using blazor_app.Models
@using blazor_app.Components
@inject HttpClient Http
@inject IModalService Modal

<h1>Knowledge Database</h1>


@if (knowledgeBase == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @* <Table data = "knowledgebase" onClick = Delete()></Table> *@
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Details</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in knowledgeBase)
            {
                <tr>
                    <td>@data.name</td>
                    <td>@data.details</td>
                    <td>@data.date</td>
                    <td>
                        <input type="button" class="btn btn-primary" value="Edit" @onclick="(() => ShowDetailModal(data.id))" />
                        <input type="button" class="btn btn-danger"  value="Delete" @onclick="(async () => await Delete(data.id))" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <h3>Create New</h3>
    <input type="button" class="btn btn-primary"  value="Create" @onclick="(() => ShowDetailModal(0))" />

    
}

@functions {
    private Knowledge[] knowledgeBase;
    Knowledge knowledgeObj = new Knowledge();
    private const string APIServer = "http://localhost:5002/api/knowledge";
    private string Date {get; set; } = System.DateTime.Now.ToString();

    protected override async Task OnInitializedAsync()
    {
        knowledgeBase = await Http.GetJsonAsync<Knowledge[]>(APIServer);
        Console.WriteLine(knowledgeBase);
    }

    @* private async Task Add()
    {
        var newKnowledge = new Knowledge { name = Name, details = Details, date=Date };
        Name = string.Empty;
        Details = string.Empty;
        await Http.PostJsonAsync(APIServer, newKnowledge);
        knowledgeBase = await Http.GetJsonAsync<Knowledge[]>(APIServer);
    } *@



    private async Task Delete(long id)
    {
        await Http.DeleteAsync(APIServer + "/" + id);
        knowledgeBase = await Http.GetJsonAsync<Knowledge[]>(APIServer);
    }

    private async Task ShowDetailModal(long id)
    {
        if (id == 0)
        {
            knowledgeObj = new Knowledge();
            knowledgeObj.date = DateTime.Now.ToString();
        }
        else
            knowledgeObj = knowledgeBase.FirstOrDefault( r => r.id == id);

        Console.WriteLine("knowledgename: {0}", knowledgeObj.name);
        var parameters = new ModalParameters();
        parameters.Add("Obj", knowledgeObj);
        parameters.Add("APIUrl", APIServer);
        
        var ModalResp = Modal.Show<KnowledgeDetail>("Edit Knowledge", parameters);
        var result = await ModalResp.Result;

        if (!result.Cancelled)
            knowledgeBase = await Http.GetJsonAsync<Knowledge[]>(APIServer);

    }




}
