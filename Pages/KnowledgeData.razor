@page "/KnowledgeData"
@inject HttpClient Http

<h1>What do you know?</h1>

<p>This component demonstrates fetching data from .NET Core API.</p>

@if (knowledgeBase == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @* <Table data = "knowledgebase" onClick = Delete()></Table> *@
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Details</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in knowledgeBase)
            {
                <tr>
                    <td>@data.name</td>
                    <td>@data.details</td>
                    <td>@data.date</td>
                    <td><input type="button" value="Delete" @onclick="(async () => await Delete(data.id))" /></td>
                </tr>
            }
        </tbody>
    </table>
    <h3>Create New</h3>
      <form>
  <table>
  <tr>
    <td><label>Name</label></td>              
    <td><input type="text" @bind="Name" /></td>
  </tr>
  <tr>
    <td><label>Details</label></td>
    <td><input type="text" @bind="Details" /></td>
  </tr>
  <tr>
    <td></td>              
    <td><input type="button" value="Add" @onclick="(async () => await Add())" /></td>
  </tr>
  </table>
  </form>
    
}

@functions {
    private Knowledge[] knowledgeBase;
    private const string APIServer = "http://localhost:5002/api/knowledge";
    private string Name { get; set; } = "";
    private string Details { get; set; } = "";
    private string Date {get; set; } = System.DateTime.Now.ToString();

    protected override async Task OnInitializedAsync()
    {
        knowledgeBase = await Http.GetJsonAsync<Knowledge[]>(APIServer);
    }

    public class Knowledge
    {
        public string name { get; set; }
        public string date { get; set; }
        public string details {get; set;}
        public long id { get; set; }
    }

    private async Task Add()
    {
        var newKnowledge = new Knowledge { name = Name, details = Details, date=Date };
        Name = string.Empty;
        Details = string.Empty;
        await Http.PostJsonAsync(APIServer, newKnowledge);
        knowledgeBase = await Http.GetJsonAsync<Knowledge[]>(APIServer);
    }

    private async Task Delete(long id)
    {
        await Http.DeleteAsync(APIServer + "/" + id);
        knowledgeBase = await Http.GetJsonAsync<Knowledge[]>(APIServer);
    }
}
